diff --git a/app/src/main/java/scramble/controller/input/impl/InputControlImpl.java b/app/src/main/java/scramble/controller/input/impl/InputControlImpl.java
index 3b13cda..edbfcd6 100644
--- a/app/src/main/java/scramble/controller/input/impl/InputControlImpl.java
+++ b/app/src/main/java/scramble/controller/input/impl/InputControlImpl.java
@@ -7,6 +7,7 @@ import javax.swing.Timer;
 import scramble.controller.input.api.InputControl;
 import scramble.controller.repaints.RepaintManager;
 import scramble.model.command.impl.SpaceShipCommand;
+import scramble.model.bullets.BulletType;
 import scramble.model.command.impl.BulletCommand;
 
 import scramble.view.compact.GameView;
@@ -23,13 +24,14 @@ public class InputControlImpl extends KeyAdapter implements InputControl {
     private final Timer timerBullet;
     private static final int SEC = 30;
 
+
     private final GameView gv;
     private final Timer timer;
     private final RepaintManager rm;
 
     /**
      * Class constructor.
-     * 
+     *
      * @param gv the game view to control
      */
     public InputControlImpl(final GameView gv) {
@@ -50,7 +52,8 @@ public class InputControlImpl extends KeyAdapter implements InputControl {
         case KeyEvent.VK_DOWN -> gv.getSpaceshipPanel().sendCommand(new SpaceShipCommand(gv.getSpaceshipPanel(), 0, PLUS));
         case KeyEvent.VK_LEFT -> gv.getSpaceshipPanel().sendCommand(new SpaceShipCommand(gv.getSpaceshipPanel(), MINUS, 0));
         case KeyEvent.VK_RIGHT -> gv.getSpaceshipPanel().sendCommand(new SpaceShipCommand(gv.getSpaceshipPanel(), PLUS, 0));
-        case KeyEvent.VK_SPACE -> gv.getSpaceshipPanel().sendCommandBullet(new BulletCommand(gv.getSpaceshipPanel()));
+        case KeyEvent.VK_SPACE -> gv.getSpaceshipPanel().sendCommandBullet(new BulletCommand(gv.getSpaceshipPanel(),BulletType.TYPE_HORIZONTAL));
+        case KeyEvent.VK_SHIFT -> gv.getSpaceshipPanel().sendCommandBullet(new BulletCommand(gv.getSpaceshipPanel(),BulletType.TYPE_BOMB));
         case KeyEvent.VK_ENTER -> {
             timer.start();
             timerBullet.start();
diff --git a/app/src/main/java/scramble/model/bullets/Bullet.java b/app/src/main/java/scramble/model/bullets/Bullet.java
index 0efb65d..f94c2d6 100644
--- a/app/src/main/java/scramble/model/bullets/Bullet.java
+++ b/app/src/main/java/scramble/model/bullets/Bullet.java
@@ -1,6 +1,10 @@
 package scramble.model.bullets;
 
 import java.io.IOException;
+import java.util.List;
+import java.util.Map;
+import java.util.ArrayList;
+import java.util.Random;
 import java.util.logging.Logger;
 import java.awt.image.BufferedImage;
 import javax.imageio.ImageIO;
@@ -18,7 +22,14 @@ public class Bullet extends GameElementImpl {
     private static final Logger LOG = Logger.getLogger(Bullet.class.getName());
     private static final Integer XSPEED = 10;
     private static final Integer YSPEED = 0;
+    private static final int SPRITES = 6;
+    private final List<BufferedImage> sprites;
     private BufferedImage sprite;
+    private BulletType type;
+    private static final Map<BulletType, PairImpl<Integer, Integer>> size_map = Map.of(
+        BulletType.TYPE_HORIZONTAL, new PairImpl<>(3,3),
+        BulletType.TYPE_BOMB, new PairImpl<>(2,4)
+    );
 
 
     /**
@@ -29,14 +40,31 @@ public class Bullet extends GameElementImpl {
      * @param width  the width of the bullet
      * @param height the height of the bullet
      */
-    public Bullet(final int x, final int y, final int width, final int height) {
-        super(x, y, width, height);
-        try {
-            // Safe way to get resource
-            sprite = ImageIO.read(Bullet.class.getResource("/bullets/bullet" + ".png"));
-        } catch (IOException e) {
-            LOG.severe("Ops!");
-            LOG.severe(e.toString());
+    public Bullet(final int x, final int y, final BulletType type) {
+        super(x, y, size_map.get(type).getFirstElement(), size_map.get(type).getSecondElement());
+        this.sprites = new ArrayList<>();
+        this.type = type;
+
+        switch (type) {
+            case BulletType.TYPE_HORIZONTAL:
+                try {
+                    // Safe way to get resource
+                    sprite = ImageIO.read(Bullet.class.getResource("/bullets/bullet" + ".png"));
+                } catch (IOException e) {
+                    LOG.severe("Ops!");
+                    LOG.severe(e.toString());
+                }
+            case BulletType.TYPE_BOMB: {
+                for (int i = 1; i <= SPRITES; i++) {
+                    try {
+                        sprites.add(ImageIO.read(getClass().getResource("/bomb/bomb" + i + ".png")));
+                    } catch (IOException e) {
+                        LOG.severe("Ops!");
+                        LOG.severe(e.toString());
+                    }
+                }
+            }
+
         }
     }
     /**
@@ -53,7 +81,21 @@ public class Bullet extends GameElementImpl {
     @SuppressFBWarnings
     @Override
     public BufferedImage getSprite() {
-        return sprite;
+        switch (type) {
+            case BulletType.TYPE_HORIZONTAL:
+                return sprite;
+            case BulletType.TYPE_BOMB: {
+                // Needs to apply only once
+                @SuppressFBWarnings
+                final Random random = new Random();
+                final int num = random.nextInt(SPRITES);
+
+                return sprites.get(num);
+            }
+            // TODO as default, throw an error!!!
+            default:
+                return sprite;
+        }
     }
 
 }
diff --git a/app/src/main/java/scramble/model/command/impl/BulletCommand.java b/app/src/main/java/scramble/model/command/impl/BulletCommand.java
index 57f8218..5654b48 100644
--- a/app/src/main/java/scramble/model/command/impl/BulletCommand.java
+++ b/app/src/main/java/scramble/model/command/impl/BulletCommand.java
@@ -1,6 +1,7 @@
 package scramble.model.command.impl;
 
 import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
+import scramble.model.bullets.BulletType;
 import scramble.model.command.api.Command;
 import scramble.view.compact.SpaceShipPanel;
 
@@ -11,6 +12,7 @@ import scramble.view.compact.SpaceShipPanel;
 public class BulletCommand implements Command {
 
     private final SpaceShipPanel gamePanel;
+    private final BulletType type;
 
     /**
      * Class constructor.
@@ -18,8 +20,9 @@ public class BulletCommand implements Command {
      * @param panel the game panel to update
      */
     @SuppressFBWarnings
-    public BulletCommand(final SpaceShipPanel panel) {
+    public BulletCommand(final SpaceShipPanel panel, BulletType type) {
         this.gamePanel = panel;
+        this.type = type;
     }
 
     /**
@@ -28,7 +31,7 @@ public class BulletCommand implements Command {
      */
     @Override
     public void execute() {
-        gamePanel.shootBullet();
+        gamePanel.shootBullet(type);
     }
 
 }
diff --git a/app/src/main/java/scramble/model/spaceship/SpaceShip.java b/app/src/main/java/scramble/model/spaceship/SpaceShip.java
index 8888928..db623cc 100644
--- a/app/src/main/java/scramble/model/spaceship/SpaceShip.java
+++ b/app/src/main/java/scramble/model/spaceship/SpaceShip.java
@@ -73,7 +73,7 @@ public final class SpaceShip extends GameElementImpl {
         // Needs to apply only once
         @SuppressFBWarnings
         final Random random = new Random();
-        final int num = random.nextInt(8);
+        final int num = random.nextInt(SPRITES);
 
         return sprites.get(num);
     }
diff --git a/app/src/main/java/scramble/view/compact/SpaceShipPanel.java b/app/src/main/java/scramble/view/compact/SpaceShipPanel.java
index fc358d8..32b02f0 100644
--- a/app/src/main/java/scramble/view/compact/SpaceShipPanel.java
+++ b/app/src/main/java/scramble/view/compact/SpaceShipPanel.java
@@ -8,6 +8,7 @@ import java.util.List;
 import javax.swing.JPanel;
 
 import scramble.model.bullets.Bullet;
+import scramble.model.bullets.BulletType;
 import scramble.model.command.impl.BulletCommand;
 import scramble.model.command.impl.SpaceShipCommand;
 import scramble.model.common.impl.PairImpl;
@@ -16,7 +17,7 @@ import scramble.model.spaceship.SpaceShip;
 
 /**
  * Class for the representation of the Spaceship Panel.
- * 
+ *
  * @see GamePanel
  * @see JPanel
  */
@@ -27,8 +28,6 @@ public class SpaceShipPanel extends GamePanel {
     private static final int STARTER_POSITION_Y = 50;
     private static final int SPACESHIP_WIDTH = 32;
     private static final int SPACESHIP_HEIGHT = 16;
-    private static final int BULLET_WIDTH = 3;
-    private static final int BULLET_HEIGHT = 3;
 
     private final transient SpaceShip spaceship;
     private transient List<Bullet> bullets;
@@ -53,7 +52,7 @@ public class SpaceShipPanel extends GamePanel {
 
     /**
      * Method that executes the command sent to the spaceship.
-     * 
+     *
      * @param command the command
      */
     public void sendCommand(final SpaceShipCommand command) {
@@ -62,7 +61,7 @@ public class SpaceShipPanel extends GamePanel {
 
     /**
      * Moves the spaceship, controlled by the player, on the game panel.
-     * 
+     *
      * @param dx movement on the X axis
      * @param dy movement on the Y axis
      */
@@ -117,7 +116,7 @@ public class SpaceShipPanel extends GamePanel {
      * The bullet's start position is at the right edge of the spaceship, centered
      * vertically.
      */
-    public void shootBullet(/*final int bullet_type*/) {
+    public void shootBullet(final BulletType bullet_type) {
         //bullet_type should be an enum, not an int
         final PairImpl<Integer, Integer> location = spaceship.getPosition();
         final int bulletX = location.getFirstElement() + spaceship.getWidth();
@@ -127,7 +126,7 @@ public class SpaceShipPanel extends GamePanel {
             create new Bullet class and append to List<Bullet>
             start position is (shipX+shipWidth, shipY+shipHeight/2)
         */
-        final Bullet bullet = new Bullet(bulletX, bulletY, BULLET_WIDTH, BULLET_HEIGHT);
+        final Bullet bullet = new Bullet(bulletX, bulletY, bullet_type);
         bullets.add(bullet);
         repaint();
     }
@@ -145,4 +144,5 @@ public class SpaceShipPanel extends GamePanel {
         this.bullets = new ArrayList<>();
     }
 
+
 }
